buildscript {
    ext.kotlin_version = '1.3.0'

    apply from: 'config.gradle'

    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$gradlePluginVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.google.gms:google-services:$googleServicesVersion"
        classpath "io.fabric.tools:gradle:$fabricVersion"
        classpath "com.akaita.android:easylauncher:$easyLauncherVersion"
        classpath "com.gradle:build-scan-plugin:$buildScanPluginVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }


}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://artifactory.surfstudio.ru/artifactory/libs-release-local" }
        maven { url "https://dl.bintray.com/terrakok/terramaven" }
        maven { url 'https://jitpack.io' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

/**
 * "Build scan" - является общей и централизованной записью сборки которая дает представление о том, что произошло и почему.
 * С этим плагином вы можете опубликовать свои записи сборки на https://scans.gradle.com бесплатно.
 *
 * пример использования: ./gradlew build --scan
 */
apply plugin: "com.gradle.build-scan"

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
    allowUntrustedServer = true
}

apply from: "scripts/dependenciesModules.gradle"
